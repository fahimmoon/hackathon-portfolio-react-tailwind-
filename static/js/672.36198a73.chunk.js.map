{"version":3,"file":"static/js/672.36198a73.chunk.js","mappings":"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","sources":["../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","components/TechIcon.jsx","components/ProjectCard.jsx","../node_modules/react-intersection-observer/src/useInView.tsx","pages/ProjectsPage.jsx"],"sourcesContent":["import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import React from 'react';\r\n\r\nconst TechIcon = ({ type }) => {\r\n  switch(type.toLowerCase()) {\r\n    case 'react':\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-blue-400\">\r\n          <path d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.93zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z\" />\r\n        </svg>\r\n      );\r\n    case 'node.js':\r\n    case 'nodejs':\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-green-500\">\r\n          <path d=\"M12 21.985c-.275 0-.532-.074-.772-.202l-2.439-1.448c-.365-.203-.182-.277-.072-.314.496-.165.588-.201 1.101-.493.056-.027.129-.016.185.021l1.87 1.12c.074.036.166.036.231 0l7.309-4.22c.072-.039.119-.119.119-.202V7.768c0-.084-.047-.165-.119-.202l-7.309-4.22c-.07-.04-.16-.04-.231 0L4.562 7.566c-.072.039-.12.12-.12.203v8.436c0 .082.048.165.119.2l2 1.155c1.08.545 1.745-.095 1.745-.735V8.502c0-.122.092-.214.213-.214h.93c.12 0 .213.089.213.214v8.322c0 1.438-.788 2.264-2.149 2.264-.422 0-.75 0-1.67-.455l-1.91-1.102c-.467-.271-.763-.773-.763-1.315V7.768c0-.542.294-1.046.763-1.315l7.31-4.22c.464-.266 1.077-.266 1.537 0l7.312 4.22c.468.27.765.773.765 1.315v8.437c0 .54-.297 1.044-.764 1.315l-7.313 4.222c-.24.128-.5.202-.772.202zm2.623-5.885c-3.181 0-3.84-1.459-3.84-2.684 0-.118.088-.215.213-.215h.944c.104 0 .196.072.211.175.144.985.571 1.482 2.471 1.482 1.521 0 2.166-.344 2.166-1.147 0-.464-.184-.81-2.545-1.041-1.978-.195-3.197-.637-3.197-2.236 0-1.47 1.24-2.347 3.325-2.347 2.344 0 3.503.813 3.647 2.554.004.055-.014.107-.05.15-.033.042-.083.067-.134.067h-.958c-.099 0-.184-.072-.204-.165-.226-1.003-.769-1.322-2.301-1.322-1.692 0-1.891.59-1.891 1.035 0 .535.231.696 2.464.9 2.219.223 3.275.634 3.275 2.36 0 1.584-1.318 2.468-3.606 2.468z\" />\r\n        </svg>\r\n      );\r\n    case 'python':\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-blue-500\">\r\n          <path d=\"M14.31.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.83l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.23l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05L0 11.97l.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.24l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05 1.07.13zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09-.33.22zM21.1 6.11l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01.21.03zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08-.33.23z\"/>\r\n        </svg>\r\n      );\r\n    case 'typescript':\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-blue-600\">\r\n          <path d=\"M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z\"/>\r\n        </svg>\r\n      );\r\n    case 'graphql':\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-pink-600\">\r\n          <path d=\"M12.002 0a2.138 2.138 0 1 0 0 4.277 2.138 2.138 0 1 0 0-4.277zm8.54 4.931a2.138 2.138 0 1 0 0 4.277 2.138 2.138 0 1 0 0-4.277zm0 9.862a2.138 2.138 0 1 0 0 4.277 2.138 2.138 0 1 0 0-4.277zm-8.54 4.931a2.138 2.138 0 1 0 0 4.276 2.138 2.138 0 1 0 0-4.276zm-8.542-4.931a2.138 2.138 0 1 0 0 4.277 2.138 2.138 0 1 0 0-4.277zm0-9.862a2.138 2.138 0 1 0 0 4.277 2.138 2.138 0 1 0 0-4.277zm8.542-3.378L2.953 6.777v10.448l9.049 5.224 9.047-5.224V6.777zm0 1.601 7.66 13.27H4.34z\"/>\r\n        </svg>\r\n      );\r\n    // ... keep other cases ...\r\n    default:\r\n      return (\r\n        <svg viewBox=\"0 0 24 24\" className=\"w-4 h-4 fill-current text-gray-400\">\r\n          <path d=\"M10 20H6V4h4v16zm8 0h-4V4h4v16zM6 20H4V4h2v16zm14 0h-2V4h2v16zM6 2V0h12v2H6z\"/>\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n\r\nexport default TechIcon; ","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FaGithub, FaExternalLinkAlt, FaInfoCircle, FaTrophy, FaStar, FaEye } from 'react-icons/fa';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport TechIcon from './TechIcon';\r\n\r\nconst ProjectCard = ({ project, viewMode = 'grid', featured = false }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const { ref, inView } = useInView({\r\n    threshold: 0.2,\r\n    triggerOnce: false\r\n  });\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    image,\r\n    technologies,\r\n    githubLink,\r\n    liveLink,\r\n    longDescription,\r\n    stats\r\n  } = project;\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 50 },\r\n    visible: { \r\n      opacity: 1, \r\n      y: 0,\r\n      transition: { \r\n        duration: 0.5,\r\n        ease: \"easeOut\" \r\n      }\r\n    }\r\n  };\r\n\r\n  const imageVariants = {\r\n    rest: { scale: 1, filter: \"brightness(0.8)\" },\r\n    hover: { \r\n      scale: 1.05, \r\n      filter: \"brightness(1.1)\",\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  const overlayVariants = {\r\n    rest: { opacity: 0.7 },\r\n    hover: { \r\n      opacity: 0.9,\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  const detailsVariants = {\r\n    hidden: { height: 0, opacity: 0 },\r\n    visible: { \r\n      height: \"auto\", \r\n      opacity: 1,\r\n      transition: { duration: 0.4, ease: \"easeOut\" } \r\n    }\r\n  };\r\n\r\n  const buttonVariants = {\r\n    rest: { scale: 1 },\r\n    hover: { scale: 1.1, transition: { duration: 0.2, type: \"spring\", stiffness: 400 } }\r\n  };\r\n\r\n  const techBadgeVariants = {\r\n    hidden: { opacity: 0, x: -10 },\r\n    visible: i => ({ \r\n      opacity: 1, \r\n      x: 0,\r\n      transition: { \r\n        delay: i * 0.1,\r\n        duration: 0.3\r\n      } \r\n    })\r\n  };\r\n\r\n  const getRandomPattern = () => {\r\n    const patterns = [\r\n      // Circuit Pattern\r\n      <path \r\n        d=\"M10 10h10v10H10zM30 10h10v10H30zM50 10h10v10H50zM10 30h10v10H10zM30 30h10v10H30zM50 30h10v10H50z\"\r\n        stroke=\"currentColor\" \r\n        strokeOpacity=\"0.1\" \r\n        fill=\"none\"\r\n      />,\r\n      // Dots Pattern\r\n      <g>\r\n        <circle cx=\"10\" cy=\"10\" r=\"2\" fill=\"currentColor\" fillOpacity=\"0.1\" />\r\n        <circle cx=\"30\" cy=\"30\" r=\"2\" fill=\"currentColor\" fillOpacity=\"0.1\" />\r\n        <circle cx=\"50\" cy=\"10\" r=\"2\" fill=\"currentColor\" fillOpacity=\"0.1\" />\r\n        <circle cx=\"10\" cy=\"50\" r=\"2\" fill=\"currentColor\" fillOpacity=\"0.1\" />\r\n      </g>,\r\n      // Hexagon Pattern\r\n      <path\r\n        d=\"M25 0l25 15v30l-25 15L0 45V15L25 0z\"\r\n        stroke=\"currentColor\"\r\n        strokeOpacity=\"0.1\"\r\n        fill=\"none\"\r\n      />\r\n    ];\r\n    return patterns[Math.floor(Math.random() * patterns.length)];\r\n  };\r\n\r\n  if (viewMode === 'list') {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, x: -20 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        className=\"relative group bg-gray-800/50 rounded-xl overflow-hidden border border-gray-700/50 hover:border-green-500/50 transition-all duration-300\"\r\n      >\r\n        <div className=\"flex items-center p-4 gap-4\">\r\n          <div className=\"relative w-24 h-24 flex-shrink-0\">\r\n            <div className=\"absolute inset-0 bg-gradient-to-br from-green-400/20 to-blue-500/20 rounded-lg\" />\r\n            <svg className=\"absolute inset-0 w-full h-full\" viewBox=\"0 0 60 60\">\r\n              <pattern id={`pattern-${project.id}`} patternUnits=\"userSpaceOnUse\" width=\"60\" height=\"60\">\r\n                {getRandomPattern()}\r\n              </pattern>\r\n              <rect width=\"100%\" height=\"100%\" fill={`url(#pattern-${project.id})`} />\r\n            </svg>\r\n            <img\r\n              src={project.image}\r\n              alt={project.title}\r\n              className=\"absolute inset-0 w-full h-full object-cover rounded-lg mix-blend-overlay\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex-grow\">\r\n            <h3 className=\"text-xl font-bold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-500\">\r\n              {project.title}\r\n            </h3>\r\n            <p className=\"text-gray-400 text-sm mb-2\">{project.description}</p>\r\n            \r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {project.technologies.slice(0, 3).map(tech => (\r\n                <span key={tech} className=\"px-2 py-1 text-xs rounded-full bg-gray-700/50 text-gray-300\">\r\n                  {tech}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col items-end gap-2\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <a\r\n                href={project.githubLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"p-2 rounded-full hover:bg-gray-700/50 transition-colors\"\r\n              >\r\n                <FaGithub className=\"w-5 h-5\" />\r\n              </a>\r\n              <a\r\n                href={project.liveLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"p-2 rounded-full hover:bg-gray-700/50 transition-colors\"\r\n              >\r\n                <FaExternalLinkAlt className=\"w-5 h-5\" />\r\n              </a>\r\n            </div>\r\n            <div className=\"flex items-center gap-3 text-sm text-gray-400\">\r\n              <span className=\"flex items-center gap-1\">\r\n                <FaStar className=\"text-yellow-400\" />\r\n                {project.stats.stars}\r\n              </span>\r\n              <span className=\"flex items-center gap-1\">\r\n                <FaEye className=\"text-blue-400\" />\r\n                {project.stats.views}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className={`group relative rounded-xl overflow-hidden ${\r\n        featured ? 'row-span-2 col-span-2' : ''\r\n      }`}\r\n    >\r\n      {/* Background Layers */}\r\n      <div className=\"absolute inset-0 bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 group-hover:border-green-500/50 transition-all duration-300\" />\r\n      <div className=\"absolute inset-0 bg-gradient-to-br from-green-400/10 to-blue-500/10\" />\r\n      <svg className=\"absolute inset-0 w-full h-full\" viewBox=\"0 0 60 60\">\r\n        <pattern id={`pattern-${project.id}`} patternUnits=\"userSpaceOnUse\" width=\"60\" height=\"60\">\r\n          {getRandomPattern()}\r\n        </pattern>\r\n        <rect width=\"100%\" height=\"100%\" fill={`url(#pattern-${project.id})`} />\r\n      </svg>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative p-6 h-full flex flex-col\">\r\n        <div className=\"flex-grow\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h3 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-500\">\r\n              {project.title}\r\n            </h3>\r\n            <div className=\"flex gap-2\">\r\n              <a\r\n                href={project.githubLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"p-2 rounded-full hover:bg-gray-700/50 transition-colors\"\r\n              >\r\n                <FaGithub className=\"w-5 h-5\" />\r\n              </a>\r\n              <a\r\n                href={project.liveLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"p-2 rounded-full hover:bg-gray-700/50 transition-colors\"\r\n              >\r\n                <FaExternalLinkAlt className=\"w-5 h-5\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"text-gray-400 mb-4\">\r\n            {featured ? project.longDescription : project.description}\r\n          </p>\r\n\r\n          <div className=\"flex flex-wrap gap-2 mb-4\">\r\n            {project.technologies.map(tech => (\r\n              <span\r\n                key={tech}\r\n                className=\"px-3 py-1 text-sm rounded-full bg-gray-700/50 text-gray-300 hover:bg-gray-600/50 transition-colors\"\r\n              >\r\n                {tech}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center pt-4 border-t border-gray-700/50\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <span className=\"flex items-center gap-1 text-yellow-400\">\r\n              <FaStar />\r\n              {project.stats.stars}\r\n            </span>\r\n            <span className=\"flex items-center gap-1 text-blue-400\">\r\n              <FaEye />\r\n              {project.stats.views}\r\n            </span>\r\n          </div>\r\n          <motion.div\r\n            className=\"text-sm text-gray-400\"\r\n            whileHover={{ scale: 1.05 }}\r\n          >\r\n            {new Date(project.date).toLocaleDateString()}\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hover Effects */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-gray-900 via-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard; ","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>(onChange);\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element | undefined>(undefined);\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport ProjectCard from '../components/ProjectCard';\nimport { \n  FaSearch, \n  FaThLarge, \n  FaList, \n  FaStar, \n  FaCode, \n  FaEye, \n  FaTrophy,\n  FaSort,\n  FaTimes \n} from 'react-icons/fa';\nimport TechIcon from '../components/TechIcon';\n\nconst ProjectsPage = () => {\n  const [selectedFilter, setSelectedFilter] = useState('All');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isFilterMenuOpen, setIsFilterMenuOpen] = useState(false);\n  const [sortBy, setSortBy] = useState('date');\n  const [viewMode, setViewMode] = useState('grid');\n  const [selectedTech, setSelectedTech] = useState([]);\n  const [projects, setProjects] = useState([]);\n\n  // Enhanced project data with more variety and details\n  useEffect(() => {\n    const projectsData = [\n      {\n        id: 1,\n        title: \"Portfolio Website\",\n        description: \"A responsive portfolio website built with React and Tailwind CSS\",\n        longDescription: \"This portfolio website showcases my skills, projects, and experience. It features smooth animations, responsive design, and modern UI elements. The site is built with React for the front-end logic and Tailwind CSS for styling.\",\n        image: \"https://images.unsplash.com/photo-1547658719-da2b51169166?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2064&q=80\",\n        technologies: [\"React\", \"Tailwind CSS\", \"Framer Motion\", \"JavaScript\"],\n        githubLink: \"https://github.com/yourusername/portfolio\",\n        liveLink: \"https://yourportfolio.com\",\n        category: \"Web Development\",\n        featured: true,\n        date: \"2024-03-01\",\n        stats: {\n          stars: 245,\n          forks: 57,\n          views: 1200\n        }\n      },\n      {\n        id: 2,\n        title: \"E-commerce App\",\n        description: \"A full-featured e-commerce application with payment integration\",\n        longDescription: \"This e-commerce platform includes product listings, shopping cart functionality, user authentication, and payment processing with Stripe. The backend is built with Node.js and Express, while the frontend uses React with Redux for state management.\",\n        image: \"https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\",\n        technologies: [\"React\", \"Node.js\", \"Express\", \"MongoDB\", \"Redux\", \"Stripe API\"],\n        githubLink: \"https://github.com/yourusername/ecommerce\",\n        liveLink: \"https://yourecommerce.com\",\n        category: \"Web Development\",\n        featured: true,\n        date: \"2024-02-15\",\n        stats: {\n          stars: 189,\n          forks: 45,\n          views: 890\n        }\n      },\n      {\n        id: 3,\n        title: \"Mobile Fitness App\",\n        description: \"A React Native app for tracking workouts and health metrics\",\n        longDescription: \"This fitness application helps users track their workouts, set goals, and monitor health metrics. It features a clean UI, workout libraries, progress charts, and integrations with health devices via Bluetooth.\",\n        image: \"https://images.unsplash.com/photo-1512941937669-90a1b58e7e9c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80\",\n        technologies: [\"React Native\", \"Expo\", \"Firebase\", \"Redux\", \"Native Modules\"],\n        githubLink: \"https://github.com/yourusername/fitness-app\",\n        liveLink: \"https://play.google.com/store/apps/details?id=com.yourfitnessapp\",\n        category: \"Mobile Development\",\n        featured: false,\n        date: \"2024-01-20\",\n        stats: {\n          stars: 156,\n          forks: 34,\n          views: 670\n        }\n      },\n      {\n        id: 4,\n        title: \"AI Image Generator\",\n        description: \"Web app that generates images from text prompts using AI\",\n        longDescription: \"This web application uses OpenAI's DALL-E API to generate images from text descriptions. Users can create, save, and share their AI-generated artwork. The app includes features like style selection, resolution options, and a gallery of past creations.\",\n        image: \"https://images.unsplash.com/photo-1615226858104-5e7b3d371e3e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1169&q=80\",\n        technologies: [\"JavaScript\", \"React\", \"Node.js\", \"OpenAI API\", \"Canvas API\"],\n        githubLink: \"https://github.com/yourusername/ai-image-generator\",\n        liveLink: \"https://aiimagegen.com\",\n        category: \"AI & Machine Learning\",\n        featured: true,\n        date: \"2024-01-10\",\n        stats: {\n          stars: 312,\n          forks: 89,\n          views: 1500\n        }\n      },\n      {\n        id: 5,\n        title: \"Real-time Chat Application\",\n        description: \"Feature-rich chat platform with real-time messaging and file sharing\",\n        longDescription: \"A modern chat application built with Socket.io and React. Features include real-time messaging, file sharing, emoji support, typing indicators, and message history. The app uses MongoDB for message persistence and Redis for session management.\",\n        image: \"/images/chat-app.jpg\",\n        technologies: [\"React\", \"Socket.io\", \"Node.js\", \"MongoDB\", \"Redis\"],\n        githubLink: \"https://github.com/yourusername/chat-app\",\n        liveLink: \"https://yourchatapp.com\",\n        category: \"Web Development\",\n        featured: true,\n        date: \"2024-03-01\",\n        stats: {\n          stars: 245,\n          forks: 57,\n          views: 1200\n        }\n      },\n      {\n        id: 6,\n        title: \"Blockchain Explorer\",\n        description: \"Comprehensive blockchain explorer with real-time transaction tracking\",\n        longDescription: \"A blockchain explorer that provides detailed information about transactions, blocks, and addresses across multiple networks. Features include real-time updates, advanced filtering, and detailed analytics.\",\n        image: \"/images/blockchain-explorer.jpg\",\n        technologies: [\"React\", \"Web3.js\", \"Node.js\", \"GraphQL\", \"PostgreSQL\"],\n        githubLink: \"https://github.com/yourusername/blockchain-explorer\",\n        liveLink: \"https://yourexplorer.com\",\n        category: \"Blockchain\",\n        featured: true,\n        date: \"2024-02-15\",\n        stats: {\n          stars: 189,\n          forks: 45,\n          views: 890\n        }\n      },\n      {\n        id: 7,\n        title: \"3D Product Configurator\",\n        description: \"Interactive 3D product visualization and customization tool\",\n        longDescription: \"A WebGL-based 3D product configurator that allows users to customize and visualize products in real-time. Features include texture mapping, color customization, and AR preview.\",\n        image: \"/images/3d-configurator.jpg\",\n        technologies: [\"Three.js\", \"React\", \"WebGL\", \"Node.js\"],\n        githubLink: \"https://github.com/yourusername/3d-configurator\",\n        liveLink: \"https://your3dconfig.com\",\n        category: \"3D Graphics\",\n        featured: false,\n        date: \"2024-01-20\",\n        stats: {\n          stars: 156,\n          forks: 34,\n          views: 670\n        }\n      },\n      {\n        id: 8,\n        title: \"AI Music Generator\",\n        description: \"Neural network-powered music composition tool\",\n        longDescription: \"An AI-powered music generation tool that creates original compositions based on user preferences. Uses deep learning models trained on various music genres to generate unique melodies and harmonies.\",\n        image: \"/images/ai-music.jpg\",\n        technologies: [\"Python\", \"TensorFlow\", \"React\", \"Web Audio API\"],\n        githubLink: \"https://github.com/yourusername/ai-music\",\n        liveLink: \"https://youraimusic.com\",\n        category: \"AI & Machine Learning\",\n        featured: true,\n        date: \"2024-01-10\",\n        stats: {\n          stars: 312,\n          forks: 89,\n          views: 1500\n        }\n      }\n    ];\n    \n    setProjects(projectsData);\n  }, []);\n\n  // Enhanced filtering and sorting logic\n  const getFilteredAndSortedProjects = () => {\n    let filtered = projects.filter(project => {\n      const matchesCategory = selectedFilter === 'All' || project.category === selectedFilter;\n      const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                          project.description.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesTech = selectedTech.length === 0 || \n                         selectedTech.every(tech => project.technologies.includes(tech));\n      return matchesCategory && matchesSearch && matchesTech;\n    });\n\n    // Sort projects\n    switch(sortBy) {\n      case 'stars':\n        filtered.sort((a, b) => b.stats.stars - a.stats.stars);\n        break;\n      case 'views':\n        filtered.sort((a, b) => b.stats.views - a.stats.views);\n        break;\n      case 'date':\n        filtered.sort((a, b) => new Date(b.date) - new Date(a.date));\n        break;\n      default:\n        break;\n    }\n\n    return filtered;\n  };\n\n  // Get all unique technologies across projects\n  const allTechnologies = [...new Set(projects.flatMap(p => p.technologies))];\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n      }\n    }\n  };\n\n  const headerVariants = {\n    hidden: { opacity: 0, y: -20 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.6, ease: \"easeOut\" }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white py-12 px-4 sm:px-6 lg:px-8\">\n      <motion.div \n        className=\"max-w-7xl mx-auto\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        {/* Simplified Header */}\n        <motion.div \n          className=\"text-center mb-12\"\n          variants={headerVariants}\n        >\n          <h1 className=\"text-4xl font-bold mb-2\">\n            <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-500\">\n              My Projects\n            </span>\n          </h1>\n          <p className=\"text-gray-400\">Showcasing my latest work and experiments</p>\n        </motion.div>\n\n        {/* Compact Controls */}\n        <div className=\"mb-8 max-w-4xl mx-auto bg-gray-800/50 rounded-lg p-4 border border-gray-700/50\">\n          <div className=\"flex flex-wrap gap-4 items-center\">\n            {/* Search */}\n            <div className=\"relative flex-grow min-w-[200px]\">\n              <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search projects...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 bg-gray-900/50 rounded-lg border border-gray-700 focus:border-green-500 focus:outline-none\"\n              />\n              {searchTerm && (\n                <button \n                  onClick={() => setSearchTerm('')}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white\"\n                >\n                  <FaTimes />\n                </button>\n              )}\n            </div>\n\n            {/* View Controls */}\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex bg-gray-900/50 rounded-lg p-1\">\n                <button\n                  onClick={() => setViewMode('grid')}\n                  className={`p-2 rounded-md transition-colors ${viewMode === 'grid' ? 'bg-green-600' : 'hover:bg-gray-700'}`}\n                  title=\"Grid View\"\n                >\n                  <FaThLarge className=\"w-4 h-4\" />\n                </button>\n                <button\n                  onClick={() => setViewMode('list')}\n                  className={`p-2 rounded-md transition-colors ${viewMode === 'list' ? 'bg-green-600' : 'hover:bg-gray-700'}`}\n                  title=\"List View\"\n                >\n                  <FaList className=\"w-4 h-4\" />\n                </button>\n              </div>\n\n              {/* Sort Dropdown */}\n              <div className=\"relative\">\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"appearance-none bg-gray-900/50 rounded-lg border border-gray-700 px-3 py-2 pr-8 focus:border-green-500 focus:outline-none\"\n                >\n                  <option value=\"date\">Latest</option>\n                  <option value=\"stars\">Most Popular</option>\n                  <option value=\"views\">Most Viewed</option>\n                </select>\n                <FaSort className=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\" />\n              </div>\n            </div>\n          </div>\n\n          {/* Technology Filter Pills */}\n          <div className=\"mt-4 flex flex-wrap gap-2\">\n            {allTechnologies.map(tech => (\n              <motion.button\n                key={tech}\n                onClick={() => {\n                  setSelectedTech(prev => \n                    prev.includes(tech) \n                      ? prev.filter(t => t !== tech)\n                      : [...prev, tech]\n                  );\n                }}\n                className={`px-3 py-1 rounded-full text-xs flex items-center gap-1.5 ${\n                  selectedTech.includes(tech) \n                    ? 'bg-green-600 text-white' \n                    : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\n                }`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <TechIcon type={tech} />\n                {tech}\n              </motion.button>\n            ))}\n          </div>\n        </div>\n\n        {/* Featured Projects Section */}\n        {selectedFilter === 'All' && !searchTerm && selectedTech.length === 0 && (\n          <motion.div \n            className=\"mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n          >\n            <div className=\"flex items-center gap-2 mb-6\">\n              <FaTrophy className=\"text-yellow-400\" />\n              <h2 className=\"text-xl font-bold\">Featured Projects</h2>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {projects\n                .filter(p => p.featured)\n                .slice(0, 2)\n                .map(project => (\n                  <ProjectCard \n                    key={project.id} \n                    project={project}\n                    featured={true}\n                  />\n                ))}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Projects Grid/List */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div \n            key={viewMode}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            className={viewMode === 'grid' \n              ? \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\"\n              : \"flex flex-col gap-4\"\n            }\n          >\n            {getFilteredAndSortedProjects().map(project => (\n              <ProjectCard \n                key={project.id} \n                project={project}\n                viewMode={viewMode}\n              />\n            ))}\n          </motion.div>\n        </AnimatePresence>\n\n        {/* Stats Section */}\n        <motion.div \n          className=\"mt-12 grid grid-cols-3 gap-4 max-w-3xl mx-auto\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {[\n            { icon: FaStar, label: \"Total Stars\", value: projects.reduce((sum, p) => sum + (p.stats?.stars || 0), 0), color: \"text-yellow-400\" },\n            { icon: FaCode, label: \"Projects\", value: projects.length, color: \"text-blue-400\" },\n            { icon: FaEye, label: \"Total Views\", value: projects.reduce((sum, p) => sum + (p.stats?.views || 0), 0), color: \"text-green-400\" }\n          ].map(({ icon: Icon, label, value, color }) => (\n            <motion.div \n              key={label}\n              className=\"bg-gray-800/50 rounded-lg p-4 text-center border border-gray-700/50\"\n              whileHover={{ scale: 1.02 }}\n            >\n              <Icon className={`w-6 h-6 ${color} mx-auto mb-2`} />\n              <div className=\"text-xl font-bold\">{value.toLocaleString()}</div>\n              <p className=\"text-sm text-gray-400\">{label}</p>\n            </motion.div>\n          ))}\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","_ref","type","toLowerCase","_jsx","viewBox","className","children","d","project","viewMode","featured","isHovered","setIsHovered","useState","showDetails","setShowDetails","ref","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result","useInView","title","description","image","technologies","githubLink","liveLink","longDescription","stats","getRandomPattern","patterns","stroke","strokeOpacity","fill","_jsxs","cx","cy","r","fillOpacity","Math","floor","random","motion","div","initial","opacity","x","animate","patternUnits","width","height","src","alt","slice","tech","href","rel","FaGithub","FaExternalLinkAlt","FaStar","stars","FaEye","views","y","whileHover","scale","Date","date","toLocaleDateString","ProjectsPage","selectedFilter","setSelectedFilter","searchTerm","setSearchTerm","isFilterMenuOpen","setIsFilterMenuOpen","sortBy","setSortBy","setViewMode","selectedTech","setSelectedTech","projects","setProjects","useEffect","category","forks","allTechnologies","Set","flatMap","p","variants","hidden","visible","transition","staggerChildren","duration","ease","FaSearch","placeholder","value","e","onClick","FaTimes","FaThLarge","FaList","FaSort","button","prev","includes","t","whileTap","TechIcon","FaTrophy","ProjectCard","AnimatePresence","mode","exit","getFilteredAndSortedProjects","filtered","matchesCategory","matchesSearch","matchesTech","every","a","b","icon","label","reduce","sum","_p$stats","color","FaCode","_p$stats2","Icon","toLocaleString"],"sourceRoot":""}